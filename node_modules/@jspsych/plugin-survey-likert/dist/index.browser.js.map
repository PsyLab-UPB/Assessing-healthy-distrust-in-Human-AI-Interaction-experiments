{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-likert\",\n  parameters: {\n    /** Array containing one or more objects with parameters for the question(s) that should be shown on the page. */\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Array of likert labels to display for this question. */\n        labels: {\n          type: ParameterType.STRING,\n          array: true,\n          pretty_name: \"Labels\",\n          default: undefined,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Width of the likert scales in pixels. */\n    scale_width: {\n      type: ParameterType.INT,\n      pretty_name: \"Scale width\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-likert**\n *\n * jsPsych plugin for gathering responses to questions on a likert scale\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-likert/ survey-likert plugin documentation on jspsych.org}\n */\nclass SurveyLikertPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    if (trial.scale_width !== null) {\n      var w = trial.scale_width + \"px\";\n    } else {\n      var w = \"100%\";\n    }\n\n    var html = \"\";\n    // inject CSS for trial\n    html += '<style id=\"jspsych-survey-likert-css\">';\n    html +=\n      \".jspsych-survey-likert-statement { display:block; font-size: 16px; padding-top: 40px; margin-bottom:10px; }\" +\n      \".jspsych-survey-likert-opts { list-style:none; width:\" +\n      w +\n      \"; margin:auto; padding:0 0 35px; display:block; font-size: 14px; line-height:1.1em; }\" +\n      \".jspsych-survey-likert-opt-label { line-height: 1.1em; color: #444; }\" +\n      \".jspsych-survey-likert-opts:before { content: ''; position:relative; top:11px; /*left:9.5%;*/ display:block; background-color:#efefef; height:4px; width:100%; }\" +\n      \".jspsych-survey-likert-opts:last-of-type { border-bottom: 0; }\" +\n      \".jspsych-survey-likert-opts li { display:inline-block; /*width:19%;*/ text-align:center; vertical-align: top; }\" +\n      \".jspsych-survey-likert-opts li input[type=radio] { display:block; position:relative; top:0; left:50%; margin-left:-6px; }\";\n    html += \"</style>\";\n\n    // show preamble text\n    if (trial.preamble !== null) {\n      html +=\n        '<div id=\"jspsych-survey-likert-preamble\" class=\"jspsych-survey-likert-preamble\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-likert-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-likert-form\" autocomplete=\"off\">';\n    }\n\n    // add likert scale questions ///\n    // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n    // so that the data are always associated with the same question regardless of order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n      // add question\n      html += '<label class=\"jspsych-survey-likert-statement\">' + question.prompt + \"</label>\";\n      // add options\n      var width = 100 / question.labels.length;\n      var options_string =\n        '<ul class=\"jspsych-survey-likert-opts\" data-name=\"' +\n        question.name +\n        '\" data-radio-group=\"Q' +\n        question_order[i] +\n        '\">';\n      for (var j = 0; j < question.labels.length; j++) {\n        options_string +=\n          '<li style=\"width:' +\n          width +\n          '%\"><label class=\"jspsych-survey-likert-opt-label\"><input type=\"radio\" name=\"Q' +\n          question_order[i] +\n          '\" value=\"' +\n          j +\n          '\"';\n        if (question.required) {\n          options_string += \" required\";\n        }\n        options_string += \">\" + question.labels[j] + \"</label></li>\";\n      }\n      options_string += \"</ul>\";\n      html += options_string;\n    }\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"jspsych-survey-likert-next\" class=\"jspsych-survey-likert jspsych-btn\" value=\"' +\n      trial.button_label +\n      '\"></input>';\n\n    html += \"</form>\";\n\n    display_element.innerHTML = html;\n\n    display_element.querySelector(\"#jspsych-survey-likert-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n      var matches = display_element.querySelectorAll<HTMLFormElement>(\n        \"#jspsych-survey-likert-form .jspsych-survey-likert-opts\"\n      );\n      for (var index = 0; index < matches.length; index++) {\n        var id = matches[index].dataset[\"radioGroup\"];\n        var el = display_element.querySelector<HTMLInputElement>(\n          'input[name=\"' + id + '\"]:checked'\n        );\n        if (el === null) {\n          var response: string | number = \"\";\n        } else {\n          var response: string | number = parseInt(el.value);\n        }\n        var obje = {};\n        if (matches[index].attributes[\"data-name\"].value !== \"\") {\n          var name = matches[index].attributes[\"data-name\"].value;\n        } else {\n          var name = id;\n        }\n        obje[name] = response;\n        Object.assign(question_data, obje);\n      }\n\n      // save data\n      var trial_data = {\n        rt: response_time,\n        response: question_data,\n        question_order: question_order,\n      };\n\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trial_data);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      question_data[name] = this.jsPsych.randomization.randomInt(0, q.labels.length - 1);\n      rt += this.jsPsych.randomization.sampleExGaussian(1500, 400, 1 / 200, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n      question_order: trial.randomize_question_order\n        ? this.jsPsych.randomization.shuffle([...Array(trial.questions.length).keys()])\n        : [...Array(trial.questions.length).keys()],\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers = Object.entries(data.response);\n    for (let i = 0; i < answers.length; i++) {\n      this.jsPsych.pluginAPI.clickTarget(\n        display_element.querySelector(\n          `input[type=\"radio\"][name=\"${answers[i][0]}\"][value=\"${answers[i][1]}\"]`\n        ),\n        ((data.rt - 1000) / answers.length) * (i + 1)\n      );\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-likert-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyLikertPlugin;\n"],"names":["ParameterType"],"mappings":"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"}