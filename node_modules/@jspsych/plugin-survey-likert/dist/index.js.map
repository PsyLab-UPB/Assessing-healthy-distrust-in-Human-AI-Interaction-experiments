{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-likert\",\n  parameters: {\n    /** Array containing one or more objects with parameters for the question(s) that should be shown on the page. */\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Array of likert labels to display for this question. */\n        labels: {\n          type: ParameterType.STRING,\n          array: true,\n          pretty_name: \"Labels\",\n          default: undefined,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Width of the likert scales in pixels. */\n    scale_width: {\n      type: ParameterType.INT,\n      pretty_name: \"Scale width\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-likert**\n *\n * jsPsych plugin for gathering responses to questions on a likert scale\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-likert/ survey-likert plugin documentation on jspsych.org}\n */\nclass SurveyLikertPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    if (trial.scale_width !== null) {\n      var w = trial.scale_width + \"px\";\n    } else {\n      var w = \"100%\";\n    }\n\n    var html = \"\";\n    // inject CSS for trial\n    html += '<style id=\"jspsych-survey-likert-css\">';\n    html +=\n      \".jspsych-survey-likert-statement { display:block; font-size: 16px; padding-top: 40px; margin-bottom:10px; }\" +\n      \".jspsych-survey-likert-opts { list-style:none; width:\" +\n      w +\n      \"; margin:auto; padding:0 0 35px; display:block; font-size: 14px; line-height:1.1em; }\" +\n      \".jspsych-survey-likert-opt-label { line-height: 1.1em; color: #444; }\" +\n      \".jspsych-survey-likert-opts:before { content: ''; position:relative; top:11px; /*left:9.5%;*/ display:block; background-color:#efefef; height:4px; width:100%; }\" +\n      \".jspsych-survey-likert-opts:last-of-type { border-bottom: 0; }\" +\n      \".jspsych-survey-likert-opts li { display:inline-block; /*width:19%;*/ text-align:center; vertical-align: top; }\" +\n      \".jspsych-survey-likert-opts li input[type=radio] { display:block; position:relative; top:0; left:50%; margin-left:-6px; }\";\n    html += \"</style>\";\n\n    // show preamble text\n    if (trial.preamble !== null) {\n      html +=\n        '<div id=\"jspsych-survey-likert-preamble\" class=\"jspsych-survey-likert-preamble\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-likert-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-likert-form\" autocomplete=\"off\">';\n    }\n\n    // add likert scale questions ///\n    // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n    // so that the data are always associated with the same question regardless of order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n      // add question\n      html += '<label class=\"jspsych-survey-likert-statement\">' + question.prompt + \"</label>\";\n      // add options\n      var width = 100 / question.labels.length;\n      var options_string =\n        '<ul class=\"jspsych-survey-likert-opts\" data-name=\"' +\n        question.name +\n        '\" data-radio-group=\"Q' +\n        question_order[i] +\n        '\">';\n      for (var j = 0; j < question.labels.length; j++) {\n        options_string +=\n          '<li style=\"width:' +\n          width +\n          '%\"><label class=\"jspsych-survey-likert-opt-label\"><input type=\"radio\" name=\"Q' +\n          question_order[i] +\n          '\" value=\"' +\n          j +\n          '\"';\n        if (question.required) {\n          options_string += \" required\";\n        }\n        options_string += \">\" + question.labels[j] + \"</label></li>\";\n      }\n      options_string += \"</ul>\";\n      html += options_string;\n    }\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"jspsych-survey-likert-next\" class=\"jspsych-survey-likert jspsych-btn\" value=\"' +\n      trial.button_label +\n      '\"></input>';\n\n    html += \"</form>\";\n\n    display_element.innerHTML = html;\n\n    display_element.querySelector(\"#jspsych-survey-likert-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n      var matches = display_element.querySelectorAll<HTMLFormElement>(\n        \"#jspsych-survey-likert-form .jspsych-survey-likert-opts\"\n      );\n      for (var index = 0; index < matches.length; index++) {\n        var id = matches[index].dataset[\"radioGroup\"];\n        var el = display_element.querySelector<HTMLInputElement>(\n          'input[name=\"' + id + '\"]:checked'\n        );\n        if (el === null) {\n          var response: string | number = \"\";\n        } else {\n          var response: string | number = parseInt(el.value);\n        }\n        var obje = {};\n        if (matches[index].attributes[\"data-name\"].value !== \"\") {\n          var name = matches[index].attributes[\"data-name\"].value;\n        } else {\n          var name = id;\n        }\n        obje[name] = response;\n        Object.assign(question_data, obje);\n      }\n\n      // save data\n      var trial_data = {\n        rt: response_time,\n        response: question_data,\n        question_order: question_order,\n      };\n\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trial_data);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      question_data[name] = this.jsPsych.randomization.randomInt(0, q.labels.length - 1);\n      rt += this.jsPsych.randomization.sampleExGaussian(1500, 400, 1 / 200, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n      question_order: trial.randomize_question_order\n        ? this.jsPsych.randomization.shuffle([...Array(trial.questions.length).keys()])\n        : [...Array(trial.questions.length).keys()],\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers = Object.entries(data.response);\n    for (let i = 0; i < answers.length; i++) {\n      this.jsPsych.pluginAPI.clickTarget(\n        display_element.querySelector(\n          `input[type=\"radio\"][name=\"${answers[i][0]}\"][value=\"${answers[i][1]}\"]`\n        ),\n        ((data.rt - 1000) / answers.length) * (i + 1)\n      );\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-likert-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyLikertPlugin;\n"],"names":[],"mappings":"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"}